@import '~bootstrap/scss/bootstrap';
@import './variables.scss';

.success {
  color: green;
}

.failure {
  color: red;
}

body {
  margin: 30px;
  text-align: center;
}

button {
  border-radius: 10px;
  background-color: #C1C5C6;
}

#message {
  font-size: 15px;
}

.tracker {
  font-size: 26px;
  font-family: $message-font-family
}

.header {
  .row {
    .box1 {
      display: flex;
      justify-content: flex-end;
      align-items: center;
      .getplayersinfobutton {
        display: none;
        height: 30px;
      }
    }
    .box2 {
      display: flex;
      justify-content: center;
      align-items: center;
      p {
        font-family: $accent-font-family;
        font-size: 65px;
      }
    }
    .box3 {
      display: flex;
      justify-content: flex-start;
      align-items: center;
      .getsignupbutton {
        height: 30px;
      }
      .getsigninbutton {
        display: none;
        height: 30px;
      }
      .getsignoutbutton {
        display: none;
        height: 30px;
      }
    }
  }
}

.signup {
  display: none;
  h2{
    font-family: $message-font-family;
  }
  input {
    height: 40px;
    width: 250px;
  }
}

.signin {
  h2{
    font-family: $message-font-family;
  }
  input {
    height: 40px;
    width: 250px;
  }
}

.changepw {
  display: none;
  h2{
    font-family: $message-font-family;
  }
}

.newgame {
  display: none;
}

.gameboard {
  display: none;
  padding: 0, 10px;
  .container {
    //viewports height (browser height)
    height: 60vh;
    .board {
      // Set the margins to be auto
      // When the left & right margins are auto, they will be the same, which ends up centering the element (20px is from the top)
      margin: auto;
      background-color: #6AC0DB;
      // Set the max size of the board 100vh means 100% of the browser's height
      // Subtract 75 px to give it some spacing at the bottom
      max-height: calc(60vh - 15px);
      max-width: calc(60vh - 15px);

      // Add background image to board:
      // background: url('') no-repeat center center;
      // background-size: cover;

      .box {
        padding: 0;
        //borders: right and bottom of each box
        border-bottom: 1px solid black;
        border-right: 1px solid black;
        // Set the box's height to be 1/3 of the parent's height (.board)
        min-height: calc(100% / 3);
        display: flex;
        justify-content: center;
        align-items: center;
        font-family: $accent-font-family;
        font-size: calc(60vh/6);
        // :nth-child psuedo class will start counting at the beginning and select each "nth" child passing 3n will select every third element.
        // This will be a sass nested selector, using the & to effectively get: .both:nth-child(3n)
        &:nth-child(3n) {
          // remove border on the border-right
          border-right: 0;
        }

        // -1n + 3 will end up grabbing the final three boxes in the grid
        // Based on different values of 'n':
        // n is 0: (-1 * 0) + 3 = 3rd last box
        // n is 1: (-1 * 1) + 3 = 2nd last box
        // n is 2: (-1 * 2) + 3 = 1st last box
        // loop ends after that because there are no more boxes
        &:nth-last-child(-1n + 3) {
          // remove the bottom border of the last 3 boxes
          border-bottom: 0;
        }
      }
    }
  }
}

.getgames {
  display: none;
  h2{
    font-family: $message-font-family;
  }
}
