@import '~bootstrap/scss/bootstrap';
$font-color: $light;

.success {
  color: green;
}

.failure {
  color: red;
}

body {
  margin: 30px;
}

// .signup {
//   display: none
// }

.signout {
  display: none;
}

.changepw {
  display: none;
}

.newgame {
  display: none;
}

.gameboard {
  display: none;
}

.getgames {
  display: none;
}

.container {
  // set the whole board's height to take up 100% of the viewports height (browser height)
  height: 100vh;
}
.board {
  // Set the margins to be auto
  // When the left & right margins are auto, they will be the same, which ends up centering the element (20px is from the top)
  margin: 20 px auto;
  // Set the max size of the board 100vh means 100% of the browser's height
  // Subtract 75 px to give it some spacing at the bottom
  max-height: calc(100vh - 75px);
  max-width: calc(100vh - 75px);

  // Add background image to board:
  background: url('') no-repeat center center;

  background-size: cover;

}
.box {

  //borders: right and bottom of each box
  border-bottom: 1px solid black;
  border-right: 1px solid black;

  // Set the box's height to be 1/3 of the parent's height (.board)
  min-height: calc(100% / 3);
  display: flex;
  justify-content: center;
  align-items: center;

  font-size: 15vh;
  // :nth-child psuedo class will start counting at the beginning and select each "nth" child passing 3n will select every third element.
  // This will be a sass nested selector, using the & to effectively get: .both:nth-child(3n)
  &:nth-child(3n) {
    // remove border on the border-right
    border-right: 0;
  }

  // -1n + 3 will end up grabbing the final three boxes in the grid
  // Based on different values of 'n':
  // n is 0: (-1 * 0) + 3 = 3rd last box
  // n is 1: (-1 * 1) + 3 = 2nd last box
  // n is 2: (-1 * 2) + 3 = 1st last box
  // loop ends after that because there are no more boxes
  &:nth-last-child(-1n + 3) {
    // remove the bottom border of the last 3 boxes
    border-bottom: 0;
  }
}
